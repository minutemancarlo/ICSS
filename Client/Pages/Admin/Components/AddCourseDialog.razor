@using ICSS.Shared

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@($"fa-solid fa-{Icon}")"></MudIcon>
            @Action Course Information
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form" Model="course">
            <MudStack>
                <MudNumericField @bind-Value="course.CourseCode" Label="Course Code" Variant="Variant.Outlined" Margin="Margin.Dense" HideSpinButtons />
                <MudTextField @bind-Value="course.CourseName" Label="Course Description" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>                
            </MudStack>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Disabled="_loading" Size="Size.Medium" OnClick="Cancel">Cancel</MudButton>
        <MudLoadingButton Variant="Variant.Filled"
        Color="Color.Success"
        Size="Size.Medium"
        Loading="@(_loading)"
        OnClick="@(async => OnSubmit())"
        ButtonType="ButtonType.Button">
            <LoadingContent>Submitting...</LoadingContent>
            <ChildContent>Submit</ChildContent>
        </MudLoadingButton>
    </DialogActions>
</MudDialog>

@code{
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Inject] HttpClient? httpClient { get; set; }
    [Inject] ISnackbar Snackbar { get; set; }

    [Parameter] public string? Action { get; set; }
    [Parameter] public string? Icon { get; set; }
    [Parameter] public Course course { get; set; }
    [Parameter] public string? currentUserId { get; set; }

    MudForm? _form;
    private bool _loading = false;

    void Cancel() => MudDialog.Cancel();


    private async Task OnSubmit()
    {

    }


}