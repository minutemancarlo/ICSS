@page "/"
@layout MainLayout
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using System.Security.Claims

<PageTitle>Index</PageTitle>



@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
  
    public List<Claim> UserClaims { get; set; } = new List<Claim>();

 

    protected override async Task OnInitializedAsync()
    {
        await RedirectUser();
        await base.OnInitializedAsync();
    }

    private async Task RedirectUser()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;
            // var returnUrl = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "returnUrl");
            if (state.User.Identity.IsAuthenticated)
            {
                var user = authenticationState.Result.User;

                if (user.IsInRole("Admin"))
                {
                    Navigation.NavigateTo("/admin-dashboard");
                }
                else if (user.IsInRole("Student"))
                {
                    Navigation.NavigateTo("/student-index");
                }
                else if (user.IsInRole("Faculty"))
                {

                    Navigation.NavigateTo("/faculty-dashboard"); 
                }
                else
                {
                    Navigation.NavigateTo("/501");
                }               
            }
            else
            {
                Navigation.NavigateTo("authentication/login", true);
                // Navigation.NavigateTo("/Home");
            }
        }
    }


    

}