
@* <Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
 *@



@inject NavigationManager Navigation


<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(AuthLayout)">
                <Authorizing>
                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
                        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                        <MudText Typo="Typo.body2" Class="fw-bolder">Determining session state...</MudText>
                    </MudStack>                    
                </Authorizing>
                <NotAuthorized>
                    @if (!context.User.Identity?.IsAuthenticated ?? true)
                    {
                        Navigation.NavigateTo("/login");
                    }
                    else
                    {
                        <MudStack>
                            <h3>Sorry</h3>
                            <p>You're not authorized to reach this page.</p>
                        </MudStack>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(AuthLayout)">
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>



